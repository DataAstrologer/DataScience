trend <- as.data.frame(table(file$month))
counter <- 0
total <- c()
strr = paste0(metric, "_count")
print(file[[strr]])
for(i in 1:nrow(table(file$month))){
sum_comment = 0
for(j in 1:trend$Freq[i]){
sum_comment <- sum_comment + amex_post$strr[nrow(file) - counter]
counter <- counter + 1
}
total[i] <- sum_comment
# print(total[i])
}
return(total)
}
toto = getTrend(amex_post, "likes")
getTrend <- function(file, metric) {
trend <- as.data.frame(table(file$month))
counter <- 0
total <- c()
strr = paste0(metric, "_count")
#print(file[[strr]])
for(i in 1:nrow(table(file$month))){
sum_comment = 0
for(j in 1:trend$Freq[i]){
sum_comment <- sum_comment + file[[strr]][nrow(file) - counter]
counter <- counter + 1
}
total[i] <- sum_comment
# print(total[i])
}
return(total)
}
toto = getTrend(amex_post, "likes")
toto
View(shares_visa)
amex_post <- read.csv(file.choose(), header = T) # amex_posts.csv
# convert Facebook date format to R date format
format.facebook.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
}
# add year-month as a new feature
visa_post$datetime <- format.facebook.date(visa_post$created_time)
visa_post$month <- format(visa_post$datetime, "%Y-%m")
amex_post$datetime <- format.facebook.date(amex_post$created_time)
amex_post$month <- format(amex_post$datetime, "%Y-%m")
# get the total number of posts/likes/comments per month for a file name and metric
getTrend <- function(file, metric) {
trend <- as.data.frame(table(file$month))
counter <- 0
total <- c()
strr = paste0(metric, "_count")
for(i in 1:nrow(table(file$month))){
sum_comment = 0
for(j in 1:trend$Freq[i]){
sum_comment <- sum_comment + file[[strr]][nrow(file) - counter]
counter <- counter + 1
}
total[i] <- sum_comment
}
return(total)
}
amex <- as.data.frame(table(amex_post$month))
amex
amex["total_likes"] <- NA
amex_likes_total = getTrend(amex_post, "likes")
ames$total_likes <- amex_likes_total
amex$total_likes <- amex_likes_total
View(amex)
amex_post <- read.csv(file.choose(), header = T) # amex_posts.csv
format.facebook.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
}
amex_post$datetime <- format.facebook.date(amex_post$created_time)
amex_post$month <- format(amex_post$datetime, "%Y-%m")
# get the total number of posts/likes/comments per month for a file name and metric
getTrend <- function(file, metric) {
trend <- as.data.frame(table(file$month))
counter <- 0
total <- c()
strr = paste0(metric, "_count")
for(i in 1:nrow(table(file$month))){
sum_comment = 0
for(j in 1:trend$Freq[i]){
sum_comment <- sum_comment + file[[strr]][nrow(file) - counter]
counter <- counter + 1
}
total[i] <- sum_comment
}
return(total)
}
amex <- as.data.frame(table(amex_post$month))
amex["total_likes"] <- NA
amex_likes_total = getTrend(amex_post, "likes")
amex$total_likes <- amex_likes_total
amex["total_shares"] <- NA
amex_shares_total = getTrend(amex_post, "shares")
amex$total_shares <- amex_shares_total
amex["total_comments"] <- NA
amex_total_comments = getTrend(amex_post, "comments")
amex$total_comments <- amex_total_comments
View(amex)
amex_post <- read.csv(file.choose(), header = T) # amex_posts.csv
visa_post <- read.csv(file.choose(), header = T) # visa_posts.csv
# convert Facebook date format to R date format
format.facebook.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
}
# add year-month as a new feature
visa_post$datetime <- format.facebook.date(visa_post$created_time)
visa_post$month <- format(visa_post$datetime, "%Y-%m")
amex_post$datetime <- format.facebook.date(amex_post$created_time)
amex_post$month <- format(amex_post$datetime, "%Y-%m")
# get the total number of posts/likes/comments per month for a file name and metric
getTrend <- function(file, metric) {
trend <- as.data.frame(table(file$month))
counter <- 0
total <- c()
strr = paste0(metric, "_count")
for(i in 1:nrow(table(file$month))){
sum_comment = 0
for(j in 1:trend$Freq[i]){
sum_comment <- sum_comment + file[[strr]][nrow(file) - counter]
counter <- counter + 1
}
total[i] <- sum_comment
}
return(total)
}
amex <- as.data.frame(table(amex_post$month))
visa <- as.data.frame(table(visa_post$month))
# get likes for amex
amex["total_likes"] <- NA
amex_likes_total = getTrend(amex_post, "likes")
amex$total_likes <- amex_likes_total
# get shares for amex
amex["total_shares"] <- NA
amex_shares_total = getTrend(amex_post, "shares")
amex$total_shares <- amex_shares_total
# get comments for amex
amex["total_comments"] <- NA
amex_total_comments = getTrend(amex_post, "comments")
amex$total_comments <- amex_total_comments
# get likes for visa
visa["total_likes"] <- NA
visa_likes_total = getTrend(visa_post, "likes")
visa$total_likes <- visa_likes_total
# get shares for visa
visa["total_shares"] <- NA
visa_shares_total = getTrend(visa_post, "shares")
visa$total_shares <- visa_shares_total
# get comments for visa
visa["total_comments"] <- NA
visa_total_comments = getTrend(visa_post, "comments")
visa$total_comments <- visa_total_comments
dim(visa)
dim(amex)
View(visa)
visa <- visa[c(-1,-2,-3,-4), ]
amex <- amex[-(1:31), ]
amex <- amex[c(-37,-36,-35), ]
dim(visa)
dim(amex)
compare <- rbind(amex, visa)
View(compare)
ggl <- ggplot(compare, aes(x = Var1, y = total_shares, group = name, colour = name))
ggl+ geom_line(size = 0.75) +
labs(title = "Comparision of shares - Amex Vs Visa") +
labs(x = "shares (months)", y = "percentage") +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Shares per month", breaks = c(10, 100, 1000, 10000, 50000))
visa$name <- c(rep("visa",nrow(visa)))
amex$name <- c(rep("amex", nrow(amex)))
compare <- rbind(amex, visa)
View(compare)
ggl <- ggplot(compare, aes(x = Var1, y = total_shares, group = name, colour = name))
ggl+ geom_line(size = 0.75) +
labs(title = "Comparision of shares - Amex Vs Visa") +
labs(x = "shares (months)", y = "percentage") +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Shares per month", breaks = c(10, 100, 1000, 10000, 50000))
library(grid)
library(gridExtra)
library(grid)
library(gridExtra)
# import files
amex_post <- read.csv(file.choose(), header = T) # amex_posts.csv
visa_post <- read.csv(file.choose(), header = T) # visa_posts.csv
# convert Facebook date format to R date format
format.facebook.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
}
# add year-month as a new feature
visa_post$datetime <- format.facebook.date(visa_post$created_time)
visa_post$month <- format(visa_post$datetime, "%Y-%m")
amex_post$datetime <- format.facebook.date(amex_post$created_time)
amex_post$month <- format(amex_post$datetime, "%Y-%m")
# get the total number of posts/likes/comments per month for a file name and metric
getTrend <- function(file, metric) {
trend <- as.data.frame(table(file$month))
counter <- 0
total <- c()
strr = paste0(metric, "_count")
for(i in 1:nrow(table(file$month))){
sum_comment = 0
for(j in 1:trend$Freq[i]){
sum_comment <- sum_comment + file[[strr]][nrow(file) - counter]
counter <- counter + 1
}
total[i] <- sum_comment
}
return(total)
}
amex <- as.data.frame(table(amex_post$month))
visa <- as.data.frame(table(visa_post$month))
# get likes for amex
amex["total_likes"] <- NA
amex_likes_total = getTrend(amex_post, "likes")
amex$total_likes <- amex_likes_total
# get shares for amex
amex["total_shares"] <- NA
amex_shares_total = getTrend(amex_post, "shares")
amex$total_shares <- amex_shares_total
# get comments for amex
amex["total_comments"] <- NA
amex_total_comments = getTrend(amex_post, "comments")
amex$total_comments <- amex_total_comments
# get likes for visa
visa["total_likes"] <- NA
visa_likes_total = getTrend(visa_post, "likes")
visa$total_likes <- visa_likes_total
# get shares for visa
visa["total_shares"] <- NA
visa_shares_total = getTrend(visa_post, "shares")
visa$total_shares <- visa_shares_total
# get comments for visa
visa["total_comments"] <- NA
visa_total_comments = getTrend(visa_post, "comments")
visa$total_comments <- visa_total_comments
# dim(visa)
# dim(amex)
# dropping extra rows (months) in order to compare the same months
visa <- visa[c(-1,-2,-3,-4), ]
amex <- amex[-(1:31), ]
amex <- amex[c(-37,-36,-35), ]
visa$name <- c(rep("visa",nrow(visa)))
amex$name <- c(rep("amex", nrow(amex)))
compare <- rbind(amex, visa)
# View(compare)
gg_l <- ggplot(compare, aes(x = Var1, y = total_likes,
group = name, colour = name))
gg_c <- ggplot(compare, aes(x = Var1, y = total_comments,
group = name, colour = name))
gg_s <- ggplot(compare, aes(x = Var1, y = total_shares,
group = name, colour = name))
likes_plot <- gg_l + geom_line(size = 0.75) +
labs(title = "Comparision of Likes - Amex Vs Visa") +
labs(x = "Likes (months)") +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Likes per month", breaks = c(10, 100, 1000, 10000, 50000))
comments_plot <- gg_c + geom_line(size = 0.75) +
labs(title = "Comparision of Comments - Amex Vs Visa") +
labs(x = "Comments (months)") +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Comments per month", breaks = c(10, 100, 1000, 10000, 50000))
shares_plot <- gg_s + geom_line(size = 0.75) +
labs(title = "Comparision of Shares - Amex Vs Visa") +
labs(x = "Shares (months)") +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Shares per month", breaks = c(10, 100, 1000, 10000, 50000))
multiplot(likes_plot, comments_plot, shares_plot, cols = 1)
library(grid)
library(gridExtra)
library(ggplot2)
grid.arrange(likes_plot, comments_plot, shares_plot, ncol = 1)
likes_plot <- gg_l + geom_line(size = 0.75) +
labs(title = "Comparision of Likes - Amex Vs Visa") +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Likes per month", breaks = c(10, 100, 1000, 10000, 50000))
comments_plot <- gg_c + geom_line(size = 0.75) +
labs(title = "Comparision of Comments - Amex Vs Visa") +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Comments per month", breaks = c(10, 100, 1000, 10000, 50000))
shares_plot <- gg_s + geom_line(size = 0.75) +
labs(title = "Comparision of Shares - Amex Vs Visa") +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Shares per month", breaks = c(10, 100, 1000, 10000, 50000))
grid.arrange(likes_plot,shares_plot, comments_plot, ncol = 1)
likes_plot <- gg_l + geom_line(size = 0.75) +
labs(title = "Comparision of Likes - Amex Vs Visa") +
labs(x = NULL) +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Likes per month", breaks = c(10, 100, 1000, 10000, 50000))
comments_plot <- gg_c + geom_line(size = 0.75) +
labs(title = "Comparision of Comments - Amex Vs Visa") +
labs(x = NULL) +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Comments per month", breaks = c(10, 100, 1000, 10000, 50000))
shares_plot <- gg_s + geom_line(size = 0.75) +
labs(title = "Comparision of Shares - Amex Vs Visa") +
labs(x = NULL) +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("Shares per month", breaks = c(10, 100, 1000, 10000, 50000))
grid.arrange(likes_plot,shares_plot, comments_plot, ncol = 1)
amex_post <- read.csv(file.choose(), header = T) # amex_posts.csv
visa_post <- read.csv(file.choose(), header = T) # visa_posts.csv
# convert Facebook date format to R date format
format.facebook.date <- function(datestring) {
date <- as.POSIXct(datestring, format = "%Y-%m-%dT%H:%M:%S+0000", tz = "GMT")
}
# add year-month as a new feature
visa_post$datetime <- format.facebook.date(visa_post$created_time)
visa_post$month <- format(visa_post$datetime, "%Y-%m")
amex_post$datetime <- format.facebook.date(amex_post$created_time)
amex_post$month <- format(amex_post$datetime, "%Y-%m")
# get the total number of posts/likes/comments per month for a file name and metric
getTrend <- function(file, metric) {
trend <- as.data.frame(table(file$month))
counter <- 0
total <- c()
strr = paste0(metric, "_count")
for(i in 1:nrow(table(file$month))){
sum_comment = 0
for(j in 1:trend$Freq[i]){
sum_comment <- sum_comment + file[[strr]][nrow(file) - counter]
counter <- counter + 1
}
total[i] <- sum_comment
}
return(total)
}
amex <- as.data.frame(table(amex_post$month))
visa <- as.data.frame(table(visa_post$month))
# get likes for amex
amex["total_likes"] <- NA
amex_likes_total <- getTrend(amex_post, "likes")
amex$total_likes <- amex_likes_total
# get shares for amex
amex["total_shares"] <- NA
amex_shares_total <- getTrend(amex_post, "shares")
amex$total_shares <- amex_shares_total
# get comments for amex
amex["total_comments"] <- NA
amex_total_comments <- getTrend(amex_post, "comments")
amex$total_comments <- amex_total_comments
# get likes for visa
visa["total_likes"] <- NA
visa_likes_total <- getTrend(visa_post, "likes")
visa$total_likes <- visa_likes_total
# get shares for visa
visa["total_shares"] <- NA
visa_shares_total <- getTrend(visa_post, "shares")
visa$total_shares <- visa_shares_total
# get comments for visa
visa["total_comments"] <- NA
visa_total_comments <- getTrend(visa_post, "comments")
visa$total_comments <- visa_total_comments
# dim(visa)
# dim(amex)
# dropping extra rows (months) in order to compare the same months
visa <- visa[c(-1,-2,-3,-4), ]
amex <- amex[-(1:31), ]
amex <- amex[c(-37,-36,-35), ]
visa$name <- c(rep("visa",nrow(visa)))
amex$name <- c(rep("amex", nrow(amex)))
compare <- rbind(amex, visa)
# View(compare)
# Show plots
gg_l <- ggplot(compare, aes(x = Var1, y = total_likes,
group = name, colour = name))
gg_c <- ggplot(compare, aes(x = Var1, y = total_comments,
group = name, colour = name))
gg_s <- ggplot(compare, aes(x = Var1, y = total_shares,
group = name, colour = name))
likes_plot <- gg_l + geom_line(size = 0.75) +
labs(title = "Comparision of Likes - Amex Vs Visa") +
labs(x = NULL) +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("likes per month",
breaks = c(10, 100, 1000, 10000, 50000))
comments_plot <- gg_c + geom_line(size = 0.75) +
labs(title = "Comparision of Comments - Amex Vs Visa") +
labs(x = NULL) +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("comments per month",
breaks = c(10, 100, 1000, 10000, 50000))
shares_plot <- gg_s + geom_line(size = 0.75) +
labs(title = "Comparision of Shares - Amex Vs Visa") +
labs(x = NULL) +
theme(axis.text.x = element_text(angle = 90, face = "bold")) +
scale_y_log10("shares per month",
breaks = c(10, 100, 1000, 10000, 50000))
grid.arrange(likes_plot,
shares_plot,
comments_plot,
ncol = 1)
library(slam)
library(tm)
install.packages("topicmodels")
library(topicmodels)
comments <- read.csv(file.choose(), header = T) #amex_comments.csv file
messages <- comments$message
# remove non-alphanumeric characters first
messages <- gsub(" +"," ",gsub("^ +","",gsub("[^a-zA-Z0-9 ]","", messages)))
myCorpus <- Corpus(VectorSource(messages)) # create corpus
# convert to lower case
clean_corpus <- tm_map(myCorpus, PlainTextDocument)
clean_corpus <- tm_map(clean_corpus, content_transformer(tolower))
# remove numbers from the corpus
clean_corpus <- tm_map(clean_corpus, removeNumbers)
# remove punctuations if present
clean_corpus <- tm_map(clean_corpus, removePunctuation)
# remove stop words
clean_corpus <- tm_map(clean_corpus, removeWords, stopwords())
# strip the extra whitespace
clean_corpus <- tm_map(clean_corpus, stripWhitespace)
# remove stop words and nonsensical words after examining the corpus
# also removing obvious high-frequency words such as amex, card, american, express, etc.
clean_corpus <- tm_map(clean_corpus, removeWords, c(stopwords('english'), "uue", "uuue", "uuuu",
"uua", "udu", "uau","ucuuu", "uuuu", "uuu",
"nnnn", "uuauub","uuauu","ueuu","can", "will",
"get", "amex", "card", "american", "express",
"uub", "also", "just", "didnt", "till", "eue",
"ufu", "since", "now", "let", "using", "hii",
"make", "even", "dont", "sure", "uu", "hi",
"th", "oh", "uuucu", "ne", "ive", "ur", "ki",
"ko", "uuub", "uubu"))
# strip the extra whitespace
clean_corpus <- tm_map(clean_corpus, stripWhitespace)
# remove words having less than 2 letters and greater than 15 letters
tdm <- TermDocumentMatrix(clean_corpus, control = list(wordLengths = c(2, 15)))
dtm <- as.DocumentTermMatrix(tdm)
rowTotals <- apply(dtm , 1, sum) #Find the sum of words in each Document
dtm   <- dtm[rowTotals > 0, ] #remove all docs without words
lda <- LDA(dtm, k = 4)
term <- terms(lda, 3) # choose the top 3 terms in every topic
term <- apply(term, MARGIN = 2, paste, collapse = ", ")
topicProbabilities <- as.data.frame(lda@gamma)
topic <- topics(lda, 1)
topic
term
topicProbabilities
messages <- comments$message
# remove non-alphanumeric characters first
messages <- gsub(" +"," ",gsub("^ +","",gsub("[^a-zA-Z0-9 ]","", messages)))
myCorpus <- Corpus(VectorSource(messages)) # create corpus
# convert to lower case
clean_corpus <- tm_map(myCorpus, PlainTextDocument)
clean_corpus <- tm_map(clean_corpus, content_transformer(tolower))
# remove numbers from the corpus
clean_corpus <- tm_map(clean_corpus, removeNumbers)
# remove punctuations if present
clean_corpus <- tm_map(clean_corpus, removePunctuation)
# remove stop words
clean_corpus <- tm_map(clean_corpus, removeWords, stopwords())
# strip the extra whitespace
clean_corpus <- tm_map(clean_corpus, stripWhitespace)
# remove stop words and nonsensical words after examining the corpus
# also removing obvious high-frequency words such as amex, card, american, express, etc.
clean_corpus <- tm_map(clean_corpus, removeWords, c(stopwords('english'), "uue", "uuue", "uuuu",
"uua", "udu", "uau","ucuuu", "uuuu", "uuu",
"nnnn", "uuauub","uuauu","ueuu","can", "will",
"uub", "also", "just", "didnt", "till", "eue",
"get", "amex", "card", "american", "express",
"ufu", "since", "now", "let", "using", "hii",
"make", "even", "dont", "sure", "uu", "hi",
"th", "oh", "uuucu", "ne", "ive", "ur", "ki",
"ko", "uuub", "uubu", "uuuue"))
# strip the extra whitespace
clean_corpus <- tm_map(clean_corpus, stripWhitespace)
# remove words having less than 2 letters and greater than 15 letters
tdm <- TermDocumentMatrix(clean_corpus, control = list(wordLengths = c(2, 15)))
dtm <- as.DocumentTermMatrix(tdm)
rowTotals <- apply(dtm , 1, sum) #Find the sum of words in each Document
dtm   <- dtm[rowTotals > 0, ] #remove all docs without words
lda <- LDA(dtm, k = 4) # find 4 topics - 1 topic per year
term <- terms(lda, 4) # choose the top 4 terms in every topic
term
term <- apply(term, MARGIN = 2, paste, collapse = ", ")
names(topics(lda))
topics(lda)
df <- data.frame(id=names(topics(lda)),
topic=topics(lda),
date=as.POSIXct(unlist(lapply(meta(corpus,type="local",tag="datetimestamp"),
as.character))),
origin=unlist(meta(corpus,type="local",tag="origin"))    )
df <- data.frame(id=names(topics(lda)),
topic=topics(lda),
date=as.POSIXct(unlist(lapply(meta(clean_corpus,type="local",tag="datetimestamp"),
as.character))),
origin=unlist(meta(clean_corpus,type="local",tag="origin"))    )
term
term <- apply(term, MARGIN = 2, paste, collapse = ", ")
term_more <- terms(lda, 8)
term_more
lda <- LDA(dtm, k = 1)
lda <- LDA(dtm, k = 2)
term <- terms(lda, 4) # choose the top 4 terms in every topic
term
term <- terms(lda, 10) # choose the top 4 terms in every topic
term
term <- terms(lda, 20) # choose the top 4 terms in every topic
term
term <- terms(lda, 10) # choose the top 4 terms in every topic
term
term
lda <- LDA(dtm, k = 4) # find 4 topics
term <- terms(lda, 4) # choose the top 4 terms in every topic
term
topic_2 <- c("customer", "call", "please", "back")
dataframe$post_id <- comments$post_id
