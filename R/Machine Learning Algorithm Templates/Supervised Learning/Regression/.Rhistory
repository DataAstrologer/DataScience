credit = read.csv("./data/credit.csv", header = T)
credit = read.csv(file.choose(), header = T)
credit$default = as.factor(credit$default)
set.seed(100) # to control randomness and get similar results
train = sample(1:1000, 800)
test = -train
training_data = credit[train,]
testing_data = credit[test,]
library(randomForest)
model = randomForest(default ~., data = training_data, mtry = 6, importance = TRUE)
model
plot(model)
imp = importance(model)[,1]
barplot(sort(imp), col = "red", main = "Variable Importance Plot", ylab = "% Increase MSE if Variable is Removed")
predicted_y = predict(model, testing_data)
library(caret)
confusionMatrix(testing_data$default, predicted_y)
model = randomForest(medv ~., data = training_data, mtry = 13, importance = TRUE)
model = randomForest(default ~., data = training_data, mtry = 13, importance = TRUE)
model
plot(model)
imp = importance(model)[,1]
barplot(sort(imp), col = "blue", main = "Variable Importance Plot", ylab = "% Increase MSE if Variable is Removed")
summary(getTree(model, k = 1, labelVar = TRUE))
predicted_y = predict(model, testing_data)
confusionMatrix(testing_data$default, predicted_y)
